package com.undef.manoslocalesproyecto

import android.content.Intent
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.MoreVert
import androidx.compose.material.icons.filled.Star
import androidx.compose.material.icons.filled.StarBorder
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.unit.dp
import androidx.compose.ui.tooling.preview.Preview
import com.undef.manoslocalesproyecto.ui.theme.ManoslocalesproyectoTheme

// ‚úÖ Data class del producto
data class Producto(
    val id: Int,
    val nombre: String,
    val categoria: String,
    val descripcion: String,
    val ciudad: String,
    val vendedor: String
)

@Composable
fun ProductScreen(productos: List<Producto>) {
    val context = LocalContext.current

    var query by remember { mutableStateOf("") }
    var buscando by remember { mutableStateOf(false) }
    var menuExpanded by remember { mutableStateOf(false) }

    // ‚≠ê IDs de productos favoritos
    var favoritos by remember { mutableStateOf(setOf<Int>()) }

    val resultadosBusqueda = productos.filter {
        val texto = query.lowercase()
        it.nombre.lowercase().contains(texto) ||
                it.categoria.lowercase().contains(texto) ||
                it.ciudad.lowercase().contains(texto) ||
                it.vendedor.lowercase().contains(texto)
    }

    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {

        // üî∑ Buscador y men√∫
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(bottom = 16.dp),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            OutlinedTextField(
                value = query,
                onValueChange = {
                    query = it
                    buscando = it.isNotBlank()
                },
                label = { Text("Buscar por categor√≠a, ciudad o vendedor") },
                modifier = Modifier
                    .weight(1f)
                    .padding(end = 8.dp),
                singleLine = true
            )

            Box {
                IconButton(onClick = { menuExpanded = true }) {
                    Icon(Icons.Default.MoreVert, contentDescription = "Men√∫")
                }

                DropdownMenu(
                    expanded = menuExpanded,
                    onDismissRequest = { menuExpanded = false }
                ) {
                    DropdownMenuItem(
                        text = { Text("Mi Perfil") },
                        onClick = {
                            menuExpanded = false
                            context.startActivity(Intent(context, PerfilActivity::class.java))
                        }
                    )
                    DropdownMenuItem(
                        text = { Text("Favoritos") },
                        onClick = {
                            menuExpanded = false
                            context.startActivity(Intent(context, FavoriteActivity::class.java))
                        }
                    )
                    DropdownMenuItem(
                        text = { Text("Configuraci√≥n") },
                        onClick = {
                            menuExpanded = false
                            // TODO: configuraci√≥n
                        }
                    )
                    DropdownMenuItem(
                        text = { Text("Consultas") },
                        onClick = {
                            menuExpanded = false
                            // TODO: consultas
                        }
                    )
                    DropdownMenuItem(
                        text = { Text("Alertas") },
                        onClick = {
                            menuExpanded = false
                            // TODO: alertas
                        }
                    )
                }
            }
        }

        // üî∂ T√≠tulo
        Text(
            text = if (buscando) "Resultados de b√∫squeda" else "Todos los productos",
            style = MaterialTheme.typography.titleLarge,
            modifier = Modifier.padding(vertical = 8.dp)
        )

        // üî∏ Lista de productos
        LazyColumn {
            val lista = if (buscando) resultadosBusqueda else productos
            items(lista) { producto ->
                Box(modifier = Modifier.padding(vertical = 8.dp)) {
                    Card(
                        modifier = Modifier
                            .fillMaxWidth(),
                        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
                    ) {
                        Column(modifier = Modifier.padding(16.dp)) {
                            Text(producto.nombre, style = MaterialTheme.typography.titleMedium)
                            Text("Categor√≠a: ${producto.categoria}", style = MaterialTheme.typography.bodyMedium)
                            Text("Ciudad: ${producto.ciudad}", style = MaterialTheme.typography.bodySmall)
                            Text("Vendedor: ${producto.vendedor}", style = MaterialTheme.typography.bodySmall)
                        }
                    }

                    // üåü Bot√≥n de favorito en la esquina superior derecha
                    IconButton(
                        onClick = {
                            favoritos = if (favoritos.contains(producto.id)) {
                                favoritos - producto.id
                            } else {
                                favoritos + producto.id
                            }
                        },
                        modifier = Modifier
                            .align(Alignment.TopEnd)
                            .padding(8.dp)
                    ) {
                        Icon(
                            imageVector = if (favoritos.contains(producto.id)) Icons.Filled.Star else Icons.Filled.StarBorder,
                            contentDescription = "Favorito",
                            tint = if (favoritos.contains(producto.id)) MaterialTheme.colorScheme.primary else MaterialTheme.colorScheme.onSurface.copy(alpha = 0.4f)
                        )
                    }
                }
            }
        }
    }
}

@Preview(showBackground = true, showSystemUi = true)
@Composable
fun ProductScreenPreview() {
    val productosEjemplo = listOf(
        Producto(1, "Pan Casero", "Panader√≠a", "Pan artesanal horneado a le√±a", "C√≥rdoba", "Pedro"),
        Producto(2, "Lechuga Fresca", "Verduras", "Cultivo sin pesticidas", "Rosario", "Gonzalo"),
        Producto(3, "Dulce de Leche", "L√°cteos", "Dulce artesanal de tambo local", "Mendoza", "Alonso"),
        Producto(4, "Frutillas", "Frutas", "Frutillas reci√©n cosechadas", "Salta", "Roberto"),
        Producto(5, "Cartera de Cuero", "Artesan√≠as", "Hecha a mano", "Buenos Aires", "Guille"),
        Producto(6, "Conserva de Tomate", "Conservas", "Sin conservantes artificiales", "Tucum√°n", "Francisco"),
        Producto(7, "Pan Integral", "Panader√≠a", "Con semillas y harina org√°nica", "La Plata", "Luc√≠a"),
        Producto(8, "Zanahorias", "Verduras", "Reci√©n cosechadas", "Santa Fe", "Martina"),
        Producto(9, "Yogur Natural", "L√°cteos", "De producci√≥n casera", "San Juan", "Miguel"),
        Producto(10, "Manzanas", "Frutas", "De productores locales", "Neuqu√©n", "Mar√≠a"),
        Producto(11, "Alfajores Artesanales", "Panader√≠a", "Rellenos de dulce de leche", "C√≥rdoba", "Pedro"),
        Producto(12, "Tomates Cherry", "Verduras", "Cultivo hidrop√≥nico", "San Luis", "Ramiro"),
        Producto(13, "Queso de Cabra", "L√°cteos", "Producto gourmet artesanal", "Chaco", "Paula"),
        Producto(14, "Peras", "Frutas", "Jugosas y dulces", "R√≠o Negro", "Luis"),
        Producto(15, "Pulsera de Macram√©", "Artesan√≠as", "Colores personalizados", "Salta", "Nina"),
        Producto(16, "Conserva de Berenjena", "Conservas", "Ideal para picadas", "Entre R√≠os", "Iv√°n"),
        Producto(17, "Pan de Campo", "Panader√≠a", "Receta tradicional", "Santa Cruz", "Julieta"),
        Producto(18, "Acelga Org√°nica", "Verduras", "Sin agroqu√≠micos", "Jujuy", "Tom√°s"),
        Producto(19, "Ricota Fresca", "L√°cteos", "Ideal para rellenos", "Corrientes", "Laura"),
        Producto(20, "Frambuesas", "Frutas", "De cultivo patag√≥nico", "Chubut", "Ver√≥nica")
    )

    ManoslocalesproyectoTheme {
        ProductScreen(productos = productosEjemplo)
    }
}

